# CodeMonkey Code Generation Demo - FAANG Quality
# Shows AI-powered code generation with proper prompts (not commands)

Output demo-code-generation-v2.gif
Set FontSize 18
Set Width 1600
Set Height 1000
Set Theme "Sunset Glow"
Set TypingSpeed 80ms
Set PlaybackSpeed 0.7

# Start in the right directory
Type "cd /Users/saintaugustine/Desktop/CodeMonkey/-CodeMonkey-" Enter
Sleep 1s

Type "# üêí CodeMonkey Code Generation Demo - AI-Powered Development" Enter
Sleep 1s
Type "# Watch how natural language prompts become production-ready code!" Enter
Sleep 2s

# Start CodeMonkey
Type "pnpm start" Enter
Sleep 5s

# Check status
Type "# First, let's see our current setup..." Enter
Sleep 1s
Type "/status" Enter
Sleep 4s

# Start with a simple task
Type "# Let's start with a classic programming task..." Enter
Sleep 1s
Type "Write a Python function that calculates the fibonacci sequence up to n terms" Enter
Sleep 7s

# Move to something more complex
Type "# Impressive! Now let's try something more advanced..." Enter
Sleep 1s
Type "Create a complete Node.js Express API route with middleware for user authentication and rate limiting" Enter
Sleep 10s

# Show multi-language capabilities
Type "# CodeMonkey works across multiple languages. Let's try Go..." Enter
Sleep 1s
Type "Implement a concurrent web scraper in Go that fetches multiple URLs simultaneously" Enter
Sleep 10s

# Demonstrate error handling
Type "# Great! Now let's see how it handles complex error scenarios..." Enter
Sleep 1s
Type "Write a robust JavaScript class for managing WebSocket connections with automatic reconnection and message queuing" Enter
Sleep 12s

# Show benefits
Type "# üöÄ Code Generation Benefits:" Enter
Sleep 1s
Type "# ‚Ä¢ Natural language to code conversion" Enter
Sleep 1s
Type "# ‚Ä¢ Multi-language support (Python, JS, Go, etc.)" Enter
Sleep 1s
Type "# ‚Ä¢ Production-ready, well-structured code" Enter
Sleep 1s
Type "# ‚Ä¢ Error handling and best practices included" Enter
Sleep 2s

# One more complex example
Type "# Let's push the limits with a full-stack example..." Enter
Sleep 1s
Type "Build a React component with TypeScript that displays a data table with sorting, filtering, and pagination" Enter
Sleep 12s

# Final demonstration
Type "# Amazing! CodeMonkey turns ideas into working code instantly." Enter
Sleep 2s
Type "# The future of software development is here! üéâ" Enter
Sleep 2s

# Exit
Type "/exit" Enter
Sleep 2s